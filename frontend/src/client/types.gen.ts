// This file is auto-generated by @hey-api/openapi-ts

export type Body_auth_login_access_token = {
  grant_type?: string | null;
  username: string;
  password: string;
  scope?: string;
  client_id?: string | null;
  client_secret?: string | null;
};

export type Body_user_update_profile_picture = {
  file: Blob | File;
};

export type Body_user_upload_profile_picture = {
  file: Blob | File;
};

export type HTTPValidationError = {
  detail?: Array<ValidationError>;
};

export type Token = {
  access_token: string;
  token_type?: string;
};

export type UserCreate = {
  username: string;
  email: string;
  bio?: string | null;
  profile_picture?: string | null;
  password_hash: string;
};

export type UserRead = {
  username: string;
  email: string;
  bio?: string | null;
  profile_picture?: string | null;
  user_id: number;
  created_at: string;
};

export type UserUpdate = {
  username?: string | null;
  email?: string | null;
  bio?: string | null;
};

export type ValidationError = {
  loc: Array<string | number>;
  msg: string;
  type: string;
};

export type RegisterUserData = {
  requestBody: UserCreate;
};

export type RegisterUserResponse = UserRead;

export type LoginAccessTokenData = {
  formData: Body_auth_login_access_token;
};

export type LoginAccessTokenResponse = Token;

export type ReadUserResponse = UserRead;

export type UpdateUserMeData = {
  requestBody: UserUpdate;
};

export type UpdateUserMeResponse = UserRead;

export type GetProfilePictureResponse = unknown;

export type UploadProfilePictureData = {
  formData: Body_user_upload_profile_picture;
};

export type UploadProfilePictureResponse = unknown;

export type UpdateProfilePictureData = {
  formData: Body_user_update_profile_picture;
};

export type UpdateProfilePictureResponse = UserRead;

export type $OpenApiTs = {
  '/api/v1/auth/register': {
    post: {
      req: RegisterUserData;
      res: {
        /**
         * The Register user
         */
        201: UserRead;
        /**
         * Validation Error
         */
        422: HTTPValidationError;
      };
    };
  };
  '/api/v1/auth/login/access-token': {
    post: {
      req: LoginAccessTokenData;
      res: {
        /**
         * Successful Response
         */
        200: Token;
        /**
         * Validation Error
         */
        422: HTTPValidationError;
      };
    };
  };
  '/api/v1/users/me': {
    get: {
      res: {
        /**
         * Successful Response
         */
        200: UserRead;
      };
    };
    patch: {
      req: UpdateUserMeData;
      res: {
        /**
         * Successful Response
         */
        200: UserRead;
        /**
         * Validation Error
         */
        422: HTTPValidationError;
      };
    };
  };
  '/api/v1/users/profile-picture': {
    get: {
      res: {
        /**
         * Successful Response
         */
        200: unknown;
      };
    };
    post: {
      req: UploadProfilePictureData;
      res: {
        /**
         * Successful Response
         */
        200: unknown;
        /**
         * Validation Error
         */
        422: HTTPValidationError;
      };
    };
    patch: {
      req: UpdateProfilePictureData;
      res: {
        /**
         * Successful Response
         */
        200: UserRead;
        /**
         * Validation Error
         */
        422: HTTPValidationError;
      };
    };
  };
};
